{"version":3,"file":"ngx-doc-viewer.js","sources":["ng://ngx-doc-viewer/document-viewer.component.ts","ng://ngx-doc-viewer/document-viewer.module.ts","ng://ngx-doc-viewer/ngx-doc-viewer.ts"],"sourcesContent":["import { Component, Input, NgZone, OnDestroy, OnChanges, SimpleChanges, Output } from '@angular/core';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\nimport { take } from 'rxjs/operators';\r\nimport { Subscription, interval } from 'rxjs';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\ndeclare var mammoth;\r\n\r\nexport type viewerType = 'google' | 'office' | 'mammoth' | 'pdf' | 'url';\r\n@Component({\r\n    selector: 'ngx-doc-viewer',\r\n    templateUrl: 'document-viewer.component.html',\r\n    styles: [`:host {\r\n        display: block;\r\n    }\r\n    .container {\r\n        width: 100%;\r\n        height: 100%;\r\n        position: relative;\r\n    }\r\n    .overlay-popout-google {\r\n        width: 40px;\r\n        height: 40px;\r\n        right: 26px;\r\n        top: 11.5px;\r\n        position: absolute;\r\n        z-index: 1000;\r\n    }\r\n    .overlay-popout-office {\r\n        width: 100px;\r\n        height: 20px;\r\n        right: 0;\r\n        bottom: 0;\r\n        position: absolute;\r\n        z-index: 1000;\r\n    }\r\n    .overlay-full {\r\n        width: 100%;\r\n        height: 100%;\r\n        right: 0;\r\n        top: 0;\r\n        position: absolute;\r\n        z-index: 1000;\r\n    }\r\n    iframe {\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n    `]\r\n})\r\nexport class NgxDocViewerComponent implements OnChanges, OnDestroy {\r\n    public fullUrl: SafeResourceUrl = null;\r\n    public externalViewer = false;\r\n    public docHtml = '';\r\n    public configuredViewer: viewerType = 'google';\r\n    private checkIFrameSubscription: Subscription = null;\r\n\r\n    constructor(private domSanitizer: DomSanitizer, private ngZone: NgZone) { }\r\n    @Output() loaded: EventEmitter<any> = new EventEmitter();\r\n    @Input() url = '';\r\n    @Input() queryParams = '';\r\n    @Input() viewerUrl = '';\r\n    @Input() googleCheckInterval = 3000;\r\n    @Input() disableContent: 'none' | 'all' | 'popout' | 'popout-hide' = 'none';\r\n    @Input() googleCheckContentLoaded = true;\r\n    @Input() viewer: viewerType;\r\n    ngOnDestroy(): void {\r\n        if (this.checkIFrameSubscription) {\r\n            this.checkIFrameSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    async ngOnChanges(changes: SimpleChanges): Promise<void> {\r\n        if (changes && changes.viewer && (changes.viewer.isFirstChange || changes.viewer.currentValue !== changes.viewer.previousValue)) {\r\n            if (this.viewer !== 'google' && this.viewer !== 'office' &&\r\n                this.viewer !== 'mammoth' && this.viewer !== 'pdf' && this.viewer !== 'url') {\r\n                console.error(`Unsupported viewer: '${this.viewer}'. Supported viewers: google, office, mammoth and pdf`);\r\n            }\r\n            if (this.viewer === 'mammoth') {\r\n                if (mammoth === null) {\r\n                    console.error('please install mammoth when using local viewer');\r\n                }\r\n            }\r\n            this.configuredViewer = this.viewer;\r\n        }\r\n        if (this.disableContent !== 'none' && this.viewer !== 'google') {\r\n\r\n        }\r\n        if ((changes.url && changes.url.currentValue !== changes.url.previousValue) ||\r\n            changes.viewer && changes.viewer.currentValue !== changes.viewer.previousValue ||\r\n            changes.viewerUrl && changes.viewerUrl.currentValue !== changes.viewerUrl.previousValue) {\r\n            if (!changes.viewerUrl) {\r\n                this.viewerUrl = null;\r\n            }\r\n            switch (this.configuredViewer) {\r\n                case 'google':\r\n                    this.viewerUrl = `https://docs.google.com/gview?url=%URL%&embedded=true`;\r\n                    break;\r\n                case 'office': {\r\n                    this.viewerUrl = `https://view.officeapps.live.com/op/embed.aspx?src=%URL%`;\r\n                    break;\r\n                }\r\n                case 'pdf': {\r\n                    this.viewerUrl = null;\r\n                    break;\r\n                }\r\n            }\r\n            this.docHtml = '';\r\n            this.externalViewer = this.configuredViewer === 'google' || this.configuredViewer === 'office' || this.configuredViewer === 'url';\r\n            if (this.checkIFrameSubscription) {\r\n                this.checkIFrameSubscription.unsubscribe();\r\n            }\r\n            if (!this.url) {\r\n                this.fullUrl = null;\r\n            } else if (this.configuredViewer === 'office' || this.configuredViewer === 'google'\r\n                || this.configuredViewer === 'pdf' || this.configuredViewer === 'url') {\r\n                const u = this.url.indexOf('/') ? encodeURIComponent(this.url) : this.url;\r\n                let url = this.viewerUrl ? this.viewerUrl.replace('%URL%', u) : this.url;\r\n                if (this.queryParams) {\r\n                    const start = this.queryParams.startsWith('&') ? '' : '&';\r\n                    url = `${url}${start}${this.queryParams}`;\r\n                }\r\n                this.fullUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(url);\r\n                // see:\r\n                // https://stackoverflow.com/questions/40414039/google-docs-viewer-returning-204-responses-no-longer-working-alternatives\r\n                // hack to reload iframe if it's not loaded.\r\n                // would maybe be better to use view.officeapps.live.com but seems not to work with sas token.\r\n                if (this.configuredViewer === 'google' && this.googleCheckContentLoaded) {\r\n                    this.ngZone.runOutsideAngular(() => {\r\n                        let iframe = document.querySelector('iframe');\r\n                        this.checkIFrame(iframe);\r\n                        // if it's not loaded after the googleIntervalCheck, then open load again.\r\n                        this.checkIFrameSubscription = interval(this.googleCheckInterval)\r\n                            .pipe(\r\n                                take(Math.round(this.googleCheckInterval === 0 ? 0 : 20000 / this.googleCheckInterval)))\r\n                            .subscribe(() => {\r\n                                if (iframe == null) {\r\n                                    iframe = document.querySelector('iframe');\r\n                                    this.checkIFrame(iframe);\r\n                                }\r\n                                this.reloadIFrame(iframe);\r\n                            });\r\n                    });\r\n                }\r\n            } else if (this.configuredViewer === 'mammoth') {\r\n                if (!mammoth) {\r\n                    console.error('Please install mammoth and make sure mammoth.browser.min.js is loaded.');\r\n                }\r\n                this.docHtml = await this.getDocxToHtml(this.url);\r\n            }\r\n        }\r\n    }\r\n    checkIFrame(iframe: HTMLIFrameElement) {\r\n        if (iframe) {\r\n            iframe.onload = () => {\r\n                this.loaded.emit(null);\r\n                if (this.checkIFrameSubscription) {\r\n                    this.checkIFrameSubscription.unsubscribe();\r\n                }\r\n            };\r\n        }\r\n    }\r\n\r\n    reloadIFrame(iframe: HTMLIFrameElement) {\r\n        if (iframe) {\r\n            console.log('reloading..');\r\n            iframe.src = iframe.src;\r\n        }\r\n    }\r\n\r\n    private async getDocxToHtml(url: string) {\r\n        const arrayBuffer = await this.fileToArray(url);\r\n        const resultObject = await mammoth.convertToHtml({ arrayBuffer });\r\n        return resultObject.value;\r\n    }\r\n\r\n    private fileToArray(url: string): Promise<ArrayBuffer> {\r\n        return new Promise<ArrayBuffer>((resolve, reject) => {\r\n            try {\r\n                const request = new XMLHttpRequest();\r\n                request.open('GET', url, true);\r\n                request.responseType = 'blob';\r\n                request.onload = () => {\r\n                    const reader = new FileReader();\r\n                    reader.readAsArrayBuffer(request.response);\r\n                    reader.onloadend = (e) => {\r\n                        resolve(reader.result as ArrayBuffer);\r\n                    };\r\n                };\r\n                request.send();\r\n            } catch {\r\n                reject(`error while retrieving file ${url}.`);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { NgxDocViewerComponent } from './document-viewer.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [NgxDocViewerComponent],\r\n    exports: [NgxDocViewerComponent]\r\n})\r\nexport class NgxDocViewerModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}